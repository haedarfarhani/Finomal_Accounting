@using Finomal.UI.Blazor.Components.model
@using Finomal.UI.Blazor.Components.Layout

<Dialog @ref="dialog">
    <Title>انتخاب کالا</Title>
    <Body>
        <div class="mb-3">
            <input @bind="searchQuery" @bind:event="oninput" type="text" class="form-control" placeholder="جستجوی نام یا کد کالا..." />
        </div>
        <div class="table-responsive" style="max-height: 300px;">
            <table class="table table-sm table-hover">
                <thead>
                    <tr>
                        <th>نام کالا</th>
                        <th>واحد</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in filteredProducts)
                    {
                        <tr>
                            <td>@product.Name</td>
                            <td>@product.Unit?.Name</td>
                            <td>
                                <button class="btn btn-sm btn-success" @onclick="() => SelectProduct(product)">انتخاب</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" @onclick="Close">بستن</button>
    </Footer>
</Dialog>

@code {
    [Parameter] public List<Product> AvailableProducts { get; set; } = new();
    [Parameter] public EventCallback<Product> OnProductSelected { get; set; }

    private Dialog dialog = new();
    private string searchQuery = "";
    private List<Product> filteredProducts = new();

    protected override void OnParametersSet()
    {
        FilterProducts();
    }

    private void FilterProducts()
    {
        if (string.IsNullOrWhiteSpace(searchQuery))
        {
            filteredProducts = AvailableProducts;
        }
        else
        {
            filteredProducts = AvailableProducts
                .Where(p => (p.Name != null && p.Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase)) ||
                            (p.Barcode1 != null && p.Barcode1.Contains(searchQuery, StringComparison.OrdinalIgnoreCase)))
                .ToList();
        }
    }

    private async Task SelectProduct(Product product)
    {
        await OnProductSelected.InvokeAsync(product);
        Close();
    }

    public void Open() => dialog.Open();
    public void Close() => dialog.Close();
}