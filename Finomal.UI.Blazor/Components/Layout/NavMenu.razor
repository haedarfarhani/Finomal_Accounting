@using Microsoft.AspNetCore.Components.Routing
@rendermode InteractiveServer

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">نرم افزار حسابداری فینومال</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        @foreach (var menu in menuList)
        {
            <div class="nav-item px-2">
                <div class="nav-link submenu-toggle @(expandedMenuTitle == menu.Title ? "expanded" : "")"
                     @onclick="() => ToggleMenu(menu.Title)"
                     @onclick:stopPropagation="true">
                    <span class="@menu.IconCssClass" aria-hidden="true"></span>
                    @menu.Title
                    <span class="submenu-arrow @(expandedMenuTitle == menu.Title ? "rotated" : "")">▼</span>
                </div>
                <div class="submenu" style="@GetSubmenuStyle(menu.Title)">
                    @foreach (var subMenu in menu.SubMenus)
                    {
                        <NavLink class="nav-link submenu-item" href="@subMenu.Href">
                            <span class=" bi-chevron-left-nav-menu" aria-hidden="true"></span> @subMenu.Title
                        </NavLink>
                    }
                </div>
            </div>
        }
    </nav>
</div>

@code {
    private List<SidebarMenu> menuList = new List<SidebarMenu>();
    private string? expandedMenuTitle;

    protected override void OnInitialized()
    {
        // 1. ماژول حسابداری
        var accountingMenu = new SidebarMenu("حسابداری", "bi bi-journal-text-nav-menu");
        accountingMenu.AddSubMenu(new SubMenu("اسناد حسابداری (جدید/لیست)", "CreateDocument"));
        accountingMenu.AddSubMenu(new SubMenu("مرور حساب‌ها (درختی/تحلیلی)"));
        accountingMenu.AddSubMenu(new SubMenu("دفاتر قانونی (روزنامه، کل، معین)"));
        accountingMenu.AddSubMenu(new SubMenu("عملیات پایان سال"));
        accountingMenu.AddSubMenu(new SubMenu("صدور سند اختتامیه و افتتاحیه"));
        accountingMenu.AddSubMenu(new SubMenu("تعریف سرفصل‌های حساب (کدینگ)"));
        menuList.Add(accountingMenu);

        // 2. ماژول دریافت و پرداخت
        var treasuryMenu = new SidebarMenu("دریافت و پرداخت", "bi bi-cash-coin-nav-menu");
        treasuryMenu.AddSubMenu(new SubMenu("اعلامیه دریافت و پرداخت"));
        treasuryMenu.AddSubMenu(new SubMenu("صندوق و بانک"));
        treasuryMenu.AddSubMenu(new SubMenu("مدیریت چک‌های دریافتی"));
        treasuryMenu.AddSubMenu(new SubMenu("مدیریت چک‌های پرداختی"));
        treasuryMenu.AddSubMenu(new SubMenu("عملیات بانکی و مغایرت‌گیری"));
        treasuryMenu.AddSubMenu(new SubMenu("گزارش‌های نقدینگی"));
        // menuList.Add(treasuryMenu);

        // 3. ماژول انبارداری
        var inventoryMenu = new SidebarMenu("انبارداری", "bi bi-boxes-nav-menu");
        inventoryMenu.AddSubMenu(new SubMenu("تعریف انبار", "CreateWarehouse"));
        inventoryMenu.AddSubMenu(new SubMenu("تعریف کالا و خدمات", "Products"));
        inventoryMenu.AddSubMenu(new SubMenu("رسید انبار (خرید/تولید)", "WarehouseReceipt"));
        inventoryMenu.AddSubMenu(new SubMenu("حواله انبار (فروش/مصرف)", "WarehouseIssue"));
        inventoryMenu.AddSubMenu(new SubMenu("انتقال بین انبارها", "WarehouseTransfer"));
        inventoryMenu.AddSubMenu(new SubMenu("انبارگردانی و شمارش", "InventoryCounting"));
        inventoryMenu.AddSubMenu(new SubMenu("گزارش کاردکس کالا"));
        inventoryMenu.AddSubMenu(new SubMenu("گزارش موجودی انبار"));
        menuList.Add(inventoryMenu);

        // 4. ماژول فروش و مشتریان
        var salesMenu = new SidebarMenu("فروش و مشتریان", "bi bi-receipt-cutoff-nav-menu");
        salesMenu.AddSubMenu(new SubMenu("تعریف مشتریان"));
        salesMenu.AddSubMenu(new SubMenu("سفارش فروش"));
        salesMenu.AddSubMenu(new SubMenu("پیش‌فاکتور فروش"));
        salesMenu.AddSubMenu(new SubMenu("فاکتور فروش"));
        salesMenu.AddSubMenu(new SubMenu("برگشت از فروش"));
        salesMenu.AddSubMenu(new SubMenu("گزارش‌های فروش (بر اساس کالا/مشتری)"));
        menuList.Add(salesMenu);

        // 5. ماژول خرید و تامین‌کنندگان
        var procurementMenu = new SidebarMenu("خرید و تامین‌کنندگان", "bi bi-cart4-nav-menu");
        procurementMenu.AddSubMenu(new SubMenu("تعریف تامین‌کنندگان"));
        procurementMenu.AddSubMenu(new SubMenu("استعلام قیمت"));
        procurementMenu.AddSubMenu(new SubMenu("سفارش خرید"));
        procurementMenu.AddSubMenu(new SubMenu("فاکتور خرید"));
        procurementMenu.AddSubMenu(new SubMenu("برگشت از خرید"));
        procurementMenu.AddSubMenu(new SubMenu("گزارش‌های خرید"));
        // menuList.Add(procurementMenu);

        // 6. ماژول حقوق و دستمزد
        var payrollMenu = new SidebarMenu("حقوق و دستمزد", "bi bi-people-nav-menu");
        payrollMenu.AddSubMenu(new SubMenu("تعریف پرسنل", "PersonnelInfo"));
        payrollMenu.AddSubMenu(new SubMenu("تعریف قرارداد پرسنل", "Contracts"));
        payrollMenu.AddSubMenu(new SubMenu("ثبت کارکرد ماهانه", "AttendanceCalculation"));
        payrollMenu.AddSubMenu(new SubMenu("محاسبه حقوق و دستمزد", "PayrollCalculation"));
        payrollMenu.AddSubMenu(new SubMenu("صدور فیش حقوقی"));
        payrollMenu.AddSubMenu(new SubMenu("تهیه فایل‌های بیمه و مالیات"));
        payrollMenu.AddSubMenu(new SubMenu("تسویه حساب پرسنل"));
        menuList.Add(payrollMenu);

        // 7. ماژول دارایی‌های ثابت
        var fixedAssetsMenu = new SidebarMenu("دارایی‌های ثابت", "bi bi-building-nav-menu");
        fixedAssetsMenu.AddSubMenu(new SubMenu("تعریف گروه‌های دارایی"));
        fixedAssetsMenu.AddSubMenu(new SubMenu("ثبت اطلاعات دارایی"));
        fixedAssetsMenu.AddSubMenu(new SubMenu("محاسبه استهلاک ماهانه/سالانه"));
        fixedAssetsMenu.AddSubMenu(new SubMenu("فروش یا اسقاط دارایی"));
        fixedAssetsMenu.AddSubMenu(new SubMenu("گزارش لیست دارایی‌ها"));
        // menuList.Add(fixedAssetsMenu);

        // 8. ماژول گزارش‌ها
        var reportsMenu = new SidebarMenu("گزارش‌ها", "bi bi-graph-up-nav-menu");
        reportsMenu.AddSubMenu(new SubMenu("گزارش‌های مالی (ترازنامه، سود و زیان)"));
        reportsMenu.AddSubMenu(new SubMenu("گزارش‌های مدیریتی (تحلیل فروش، هزینه‌ها)"));
        reportsMenu.AddSubMenu(new SubMenu("گزارش‌های قانونی (سامانه مودیان، معاملات فصلی)"));
        reportsMenu.AddSubMenu(new SubMenu("گزارش‌ساز پویا"));
        // menuList.Add(reportsMenu);

        // 9. ماژول تنظیمات
        var settingsMenu = new SidebarMenu("تنظیمات", "bi bi-gear-nav-menu");
        settingsMenu.AddSubMenu(new SubMenu("اطلاعات پایه شرکت"));
        settingsMenu.AddSubMenu(new SubMenu("مدیریت کاربران و دسترسی‌ها"));
        settingsMenu.AddSubMenu(new SubMenu("تنظیمات دوره مالی"));
        settingsMenu.AddSubMenu(new SubMenu("پشتیبان‌گیری و بازیابی اطلاعات"));
        menuList.Add(settingsMenu);
    }

    private void ToggleMenu(string menuTitle)
    {
        if (expandedMenuTitle == menuTitle)
        {
            expandedMenuTitle = null; // Close the menu if it's already open
        }
        else
        {
            expandedMenuTitle = menuTitle; // Open the clicked menu
        }
        StateHasChanged();
    }

    private string GetSubmenuStyle(string menuTitle)
    {
        if (expandedMenuTitle != menuTitle)
        {
            return "max-height: 0; opacity: 0;";
        }

        // به جای محاسبه دستی، یک ارتفاع حداکثری بزرگ در نظر می‌گیریم
        // این مقدار باید به اندازه‌ای بزرگ باشد که همه آیتم‌ها را حتی در صورت چند خطی شدن پوشش دهد
        return "max-height: 800px; opacity: 1;";
    }

    // --- Model Classes ---
    public class SidebarMenu
    {
        public string Title { get; set; }
        public string IconCssClass { get; set; }
        public List<SubMenu> SubMenus { get; set; } = new List<SubMenu>();

        public SidebarMenu(string title, string iconCssClass)
        {
            Title = title;
            IconCssClass = iconCssClass;
        }

        public void AddSubMenu(SubMenu subMenu)
        {
            SubMenus.Add(subMenu);
        }
    }

    public class SubMenu
    {
        public string Title { get; set; }
        public string Href { get; set; }

        public SubMenu(string title, string? href = null)
        {
            Title = title;
            // Create a simple URL-friendly href from the title if not provided
            Href = href ?? title.ToLower().Replace(" ", "-").Replace("(", "").Replace(")", "").Replace("/", "-");
        }
    }
}