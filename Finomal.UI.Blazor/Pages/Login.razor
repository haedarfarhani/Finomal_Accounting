@page "/login"
@layout LoginLayout


@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

<div class="card shadow-lg border-0 rounded-lg mt-5 mx-auto" style="max-width: 50rem;">
    <div class="card-header"><h3 class="text-center font-weight-light my-4">ورود به سیستم</h3></div>
    <div class="card-body">
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <div class="form-floating mb-3">
                <InputSelect id="role" class="form-select" @bind-Value="loginModel.Role">
                    <option value="">یک نقش انتخاب کنید...</option>
                    <option value="Admin">ادمین</option>
                    <option value="Accountant">حسابدار</option>
                    <option value="Visitor">ویزیتور</option>
                </InputSelect>
                <label for="role">نقش</label>
                <ValidationMessage For="@(() => loginModel.Role)" />
            </div>
            <div class="form-floating mb-3">
                <InputText id="username" class="form-control" @bind-Value="loginModel.Username" placeholder="نام کاربری" />
                <label for="username">نام کاربری</label>
                <ValidationMessage For="@(() => loginModel.Username)" />
            </div>

            <div class="form-floating mb-3">
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="رمز عبور" />
                <label for="password">رمز عبور</label>
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            
            <div class="d-grid">
                 <button type="submit" class="btn btn-primary btn-block">ورود</button>
            </div>
        </EditForm>
    </div>
    <div class="card-footer text-center py-3">
        <div class="small"><a href="/register">حساب کاربری ندارید؟ ثبت‌نام کنید</a></div>
    </div>
</div>


@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        // در دنیای واقعی، اینجا نام کاربری و رمز عبور را با دیتابیس چک کنید.
        // اگر معتبر بود:

        var claims = new List<Claim>
        {
            new Claim(ClaimTypes.Name, loginModel.Username),
            new Claim(ClaimTypes.Role, loginModel.Role),
        };

        var claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);

        var authProperties = new AuthenticationProperties
        {
            // می‌توانید ویژگی‌های دیگری مثل زمان انقضا را اینجا تنظیم کنید.
            IsPersistent = true // برای "مرا به خاطر بسپار"
        };

        // استفاده از SignInAsync برای ایجاد کوکی امن احراز هویت
        // این کار باید از طریق HttpContext انجام شود.
        await HttpContextAccessor.HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme,new ClaimsPrincipal(claimsIdentity),authProperties);

        // پس از ایجاد کوکی، کاربر را به صفحه اصلی هدایت کنید.
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
    

    public class LoginModel
    {
        [Required(ErrorMessage = "وارد کردن نام کاربری الزامی است.")]
        public string Username { get; set; } = "";

        [Required(ErrorMessage = "وارد کردن رمز عبور الزامی است.")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Required(ErrorMessage = "انتخاب نقش الزامی است.")]
        public string Role { get; set; } = "";
    }
}

