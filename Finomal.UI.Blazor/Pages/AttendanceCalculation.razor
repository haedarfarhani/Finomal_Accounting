@page "/AttendanceCalculation"
@using Finomal.UI.Blazor.Components.model
@using System.Globalization
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<h3><i class="fas fa-calculator me-2"></i>محاسبه و ثبت کارکرد ماهانه</h3>

<div class="card shadow-sm">
    <div class="card-body">
        @* --- بخش انتخاب دوره --- *@
        <div class="row g-3 align-items-end p-3 bg-light border rounded mb-3">
            <div class="col-md-3">
                <label class="form-label">سال</label>
                <InputSelect @bind-Value="selectedYear" class="form-select">
                    @for (int year = DateTime.Now.Year - 2; year <= DateTime.Now.Year + 1; year++)
                    {
                        <option value="@year">@year</option>
                    }
                </InputSelect>
            </div>
            <div class="col-md-3">
                <label class="form-label">ماه</label>
                <InputSelect @bind-Value="selectedMonth" class="form-select">
                    @for (int month = 1; month <= 12; month++)
                    {
                        <option value="@month">@persianMonths[month - 1]</option>
                    }
                </InputSelect>
            </div>
            <div class="col-md-3">
                <button class="btn btn-primary w-100" @onclick="HandleShowPersonnel">
                    <i class="fas fa-users me-1"></i> نمایش لیست پرسنل
                </button>
            </div>
        </div>

        @if (attendanceRecords.Any())
        {
            <hr />
            <h4 class="mb-3">کارکرد ماه: @persianMonths[selectedMonth - 1] @selectedYear</h4>

            @* --- جدول کارکرد --- *@
            <div class="table-responsive">
                <table class="table table-bordered table-sm">
                    <thead class="table-light text-center">
                        <tr>
                            <th rowspan="2">نام پرسنل</th>
                            <th rowspan="2">کد پرسنلی</th>
                            <th colspan="3">مبالغ (تومان)</th>
                            <th colspan="5">کارکرد</th>
                        </tr>
                        <tr>
                            <th>پاداش</th>
                            <th>مساعده</th>
                            <th>سایر کسورات</th>
                            <th>روزهای کارکرد</th>
                            <th>غیبت (روز)</th>
                            <th>اضافه کاری (ساعت)</th>
                            <th>ماموریت (روز)</th>
                            <th>مرخصی (روز)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var record in attendanceRecords)
                        {
                            <tr>
                                <td>@record.Person?.Identity.FirstName @record.Person?.Identity.LastName</td>
                                <td>@record.Person?.PersonnelCode</td>
                                <td><InputNumber class="form-control" @bind-Value="record.Bonus" disabled="@IsCurrentSheetConfirmed" /></td>
                                <td><InputNumber class="form-control" @bind-Value="record.AdvancePayment" disabled="@IsCurrentSheetConfirmed" /></td>
                                <td><InputNumber class="form-control" @bind-Value="record.OtherDeductions" disabled="@IsCurrentSheetConfirmed" /></td>
                                <td><InputNumber class="form-control" @bind-Value="record.WorkingDays" disabled="@IsCurrentSheetConfirmed" /></td>
                                <td><InputNumber class="form-control" @bind-Value="record.AbsenceDays" disabled="@IsCurrentSheetConfirmed" /></td>
                                <td><InputNumber class="form-control" @bind-Value="record.OvertimeHours" disabled="@IsCurrentSheetConfirmed" /></td>
                                <td><InputNumber class="form-control" @bind-Value="record.MissionDays" disabled="@IsCurrentSheetConfirmed" /></td>
                                <td><InputNumber class="form-control" @bind-Value="record.LeaveDays" disabled="@IsCurrentSheetConfirmed" /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @* --- دکمه‌های عملیات --- *@
            <div class="mt-3">
                @if (!IsCurrentSheetConfirmed)
                {
                    <button class="btn btn-success btn-lg" @onclick="HandleSave"><i class="fas fa-save me-1"></i> ذخیره پیش‌نویس</button>
                    <button class="btn btn-primary btn-lg" @onclick="HandleConfirm"><i class="fas fa-check-circle me-1"></i> تایید نهایی اطلاعات</button>
                }
                else
                {
                    <div class="alert alert-success"><i class="fas fa-lock me-2"></i>اطلاعات کارکرد این ماه تایید نهایی شده و قابل تغییر نیست.</div>
                }
            </div>
        }

    </div>
</div>

@code {
    // --- State & Data ---
    private int selectedYear = DateTime.Now.Year;
    private int selectedMonth = DateTime.Now.Month;
    private List<Person> allPersonnel = new();
    private List<MonthlyAttendanceRecord> attendanceRecords = new();
    private bool IsCurrentSheetConfirmed = false;

    // --- UI Helpers ---
    private readonly string[] persianMonths = { "فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند" };
    private string? userMessage;
    private string messageCssClass = string.Empty;

    protected override void OnInitialized()
    {
        // --- Mock Data ---
        allPersonnel = new List<Person>
        {
            new Person { Id = 1, PersonnelCode = "P-1001", Identity = new PersonIdentityInfo { FirstName = "علی", LastName = "رضایی"} },
            new Person { Id = 2, PersonnelCode = "P-1002", Identity = new PersonIdentityInfo { FirstName = "سارا", LastName = "محمدی"} },
            new Person { Id = 3, PersonnelCode = "P-1003", Identity = new PersonIdentityInfo { FirstName = "حسن", LastName = "کریمی"} }
        };
    }

    private void HandleShowPersonnel()
    {
        // In a real app, you'd fetch records for the selected month/year from a database.
        // If they don't exist, you create them. If they exist, you load them.

        // Simulating this logic for the demo:
        // For simplicity, we always create a new sheet.
        attendanceRecords = new List<MonthlyAttendanceRecord>();
        IsCurrentSheetConfirmed = false; // Reset confirmation status

        foreach (var person in allPersonnel)
        {
            attendanceRecords.Add(new MonthlyAttendanceRecord
            {
                PersonId = person.Id,
                Person = person,
                Year = selectedYear,
                Month = selectedMonth,
                WorkingDays = 25 // Default value
            });
        }
    }

    private void HandleSave()
    {
        // In a real app, you would send 'attendanceRecords' to your service/API to save.
        Console.WriteLine($"Saving {attendanceRecords.Count} records for {selectedMonth}/{selectedYear}");
        // Show success message to user
    }

    private async Task HandleConfirm()
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "آیا از تایید نهایی اطلاعات مطمئن هستید؟ پس از تایید، امکان ویرایش وجود نخواهد داشت.");
        if (confirmed)
        {
            HandleSave(); // First, save the latest changes.

            // Then, mark all records as confirmed.
            foreach (var record in attendanceRecords)
            {
                record.IsConfirmed = true;
            }
            IsCurrentSheetConfirmed = true;
            StateHasChanged(); // Update UI to disable inputs.
        }
    }
}
